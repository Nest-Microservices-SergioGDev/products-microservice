####################################
# DEPENDENCIAS
####################################
FROM node:21-alpine3.19 as deps

WORKDIR /usr/src/app
COPY package*.json ./
RUN npm install


####################################
# Builder - Construye la aplicación
####################################

FROM node:21-alpine3.19 as build
WORKDIR /usr/src/app

# Copiar de deps los node_modules
COPY --from=deps /usr/src/app/node_modules ./node_modules

# Copiar todo el código fuente de la aplicación
COPY . .

RUN npx prisma generate

# RUN npm run test -> Si el testing falla, no hace el build de la aplicación
RUN npm run build

# Eliminamos los node_modules que no sean de producción
RUN npm ci -f --only=production && npm cache clean --force


####################################
# Crear la imagen final de Docker
####################################
FROM node:21-alpine3.19 as prod
WORKDIR /usr/src/app

# Copiamos los node_modules desde build
COPY --from=build /usr/src/app/node_modules ./node_modules

# Copiar la carpeta de DIST
COPY --from=build /usr/src/app/dist ./dist
COPY --from=build /usr/src/app/prisma ./prisma

ENV NODE_ENV=production
USER node

EXPOSE 3000

CMD [ "node", "dist/main.js"]